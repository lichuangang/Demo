<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(SolutionDir)packages/Include/DbHelper.ttinclude"  #>
<#@ include file="$(SolutionDir)packages/Include/MultipleOutputHelper.ttinclude"#>
<#
	var manager = Manager.Create(Host, GenerationEnvironment);  
	foreach(string tb_name in DbHelper.GetDbTableNames(config.ConnectionString,config.ExcludeTable))
	{
		manager.StartNewFile(DbHelper.ConvertColumnName(tb_name)+".cs");

		#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Entity.Demo
{	

	public partial class <#=DbHelper.ConvertColumnName(tb_name)#>
    {
		<# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, tb_name)){#>

		/// <summary>
		/// <#=string.IsNullOrEmpty(column.Remark)?DbHelper.ConvertColumnName(column.ColumnName):DbHelper.TrimWrap(column.Remark)#>
		/// </summary>		
		public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=DbHelper.ConvertColumnName(column.ColumnName)#> { get; set; }
		<#}#> 
    }
}
		<#
		manager.EndBlock();    
	}
	manager.Process(true);  
#>


<#+

	public class config
	{
		public static readonly string DbDatabase="Demo";
		public static readonly string ConnectionString="Data Source=.;Initial Catalog=Demo;User ID=sa;Password=123456;";
		//批量生成时，需要排除的表
		public static readonly string[] ExcludeTable = new string[] { "ad_info_111", "test" };
	}
#>

